diff --git a/node_modules/wc-compiler/src/wcc.js b/node_modules/wc-compiler/src/wcc.js
index b27278f..9f6c6c5 100644
--- a/node_modules/wc-compiler/src/wcc.js
+++ b/node_modules/wc-compiler/src/wcc.js
@@ -126,7 +126,7 @@ async function getTagName(moduleURL) {
   return tagName;
 }
 
-async function initializeCustomElement(elementURL, tagName, attrs = [], definitions = [], isEntry) {
+async function initializeCustomElement(elementURL, tagName, attrs = [], definitions = [], isEntry, props = {}) {
   if (!tagName) {
     const depth = isEntry ? 1 : 0;
     registerDependencies(elementURL, definitions, depth);
@@ -137,11 +137,9 @@ async function initializeCustomElement(elementURL, tagName, attrs = [], definiti
   const element = tagName
     ? customElements.get(tagName)
     : (await import(pathname)).default;
-  const dataLoader = (await import(pathname)).getData;
-  const data = dataLoader ? await dataLoader() : {};
 
   if (element) {
-    const elementInstance = new element(data); // eslint-disable-line new-cap
+    const elementInstance = new element(props); // eslint-disable-line new-cap
 
     attrs.forEach((attr) => {
       elementInstance.setAttribute(attr.name, attr.value);
@@ -160,11 +158,11 @@ async function initializeCustomElement(elementURL, tagName, attrs = [], definiti
   }
 }
 
-async function renderToString(elementURL, wrappingEntryTag = true) {
+async function renderToString(elementURL, wrappingEntryTag = true, props = {}) {
   const definitions = [];
   const elementTagName = wrappingEntryTag && await getTagName(elementURL);
   const isEntry = !!elementTagName;
-  const elementInstance = await initializeCustomElement(elementURL, undefined, undefined, definitions, isEntry);
+  const elementInstance = await initializeCustomElement(elementURL, undefined, undefined, definitions, isEntry, props);
 
   const elementHtml = elementInstance.shadowRoot
     ? elementInstance.getInnerHTML({ includeShadowRoots: true })
